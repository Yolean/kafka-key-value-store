version: "3.4"
services:

  zookeeper:
    image: solsson/kafka:2.1.0@sha256:ac3f06d87d45c7be727863f31e79fbfdcb9c610b51ba9cf03c75a95d602f15e1
    entrypoint: ./bin/zookeeper-server-start.sh
    command:
    - ./config/zookeeper.properties

  kafka:
    image: solsson/kafka:2.1.0@sha256:ac3f06d87d45c7be727863f31e79fbfdcb9c610b51ba9cf03c75a95d602f15e1
    links:
    - zookeeper
    entrypoint:
    - ./bin/kafka-server-start.sh
    - ./config/server.properties
    - --override
    -   zookeeper.connect=zookeeper:2181
    - --override
    -   log.retention.hours=-1
    - --override
    -   log.dirs=/var/lib/kafka/data/topics
    - --override
    # Shouldn't be needed for streams, but currently for the test container(s) to produce data
    -   auto.create.topics.enable=true
    - --override
    -   default.replication.factor=1
    - --override
    -   min.insync.replicas=1
    - --override
    -   offsets.retention.minutes=10080

  pixy:
    image: mailgun/kafka-pixy:0.16.0@sha256:2a2d426f9fe17ede9c21b2f8b7418d8787293e39327b638fd6c403f3726597fb 
    entrypoint:
    - kafka-pixy
    - -kafkaPeers
    -  kafka:9092
    - -zookeeperPeers
    -  zookeeper:2181
    - -tcpAddr
    -  0.0.0.0:80
    expose:
    - "80"

  cache1:
    depends_on:
    - kafka
    image: yolean/kafka-key-value-store
    build:
      context: ../
    labels:
    - com.yolean.build-target
    command:
    - --port
    -   '8051'
    - --streams-props
    -   bootstrap.servers=kafka:9092
    -   num.standby.replicas=0
    - --hostname
    -   cache1
    - --application-id
    -   kv-001
    - --topic
    -   topic1

  example-nodejs-client:
    depends_on:
    - cache1
    build:
      context: ../example-nodejs-client
    labels:
    - com.yolean.build-contract
    expose:
    - "8080"
    # dev mode, uncomment below
    volumes:
    - ../example-nodejs-client:/usr/src/app
    command:
    #- --watch
    - --watchAll
